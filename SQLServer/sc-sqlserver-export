#!/bin/bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# Set the python io encoding to UTF-8 by default if not set.
if [ -z ${PYTHONIOENCODING+x} ]; then export PYTHONIOENCODING=utf8; fi

export PYTHONPATH="${DIR}:${PYTHONPATH}"
unameOut="$(uname -s)"
case "${unameOut}" in
    Darwin*)    MAC="TRUE";;
    Linux*)     LINUX="TRUE";;
    LINUX*)     LINUX="TRUE";;
    *)          OTHER="TRUE"
esac

POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -h|--help)
      HELP="TRUE"
      shift # past argument
      ;;
    -C|--connection-string)
      CONNSTR="$2"
      shift # past argument
      shift # past value
      ;;
    -S|--server)
      SERVER="$2"
      shift # past argument
      shift # past value
      ;;
    -U|--user)
      USER="$2"
      shift # past argument
      shift # past value
      ;;
    -P|--password)
      PASSWORD="$2"
      shift # past argument
      shift # past value
      ;;
    -D|--database)
      PASSWORD="$2"
      shift # past argument
      shift # past value
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done



if [ "$HELP" = "TRUE" ];
then
    Write-Host "    usage: sc-sqlserver-export [-h] [--connection-string CONNSTR] [-D|--database database] [-S|--server SERVER] [-U|--user USER] [-P|--password PASSWORD]"
    Write-Host ""
    Write-Host "    Mobilize.NET SQLServer Code Export ToolsVersion X.X.X"
    Write-Host ""
    Write-Host "    optional arguments:"
    Write-Host "    -h, --help        show this help message and exit"
    Write-Host "    -C , --connection-string"
    Write-Host "                      DB connection string"
    Write-Host "    -S , --server     Server address or name"
    Write-Host "    -D , --database   Database name"
    Write-Host "    -U , --user       Login ID for server"
    Write-Host "    -P , --password   The password for the given user."
if

if [[ -z "$CONNSTR" && -z "$SERVER" ]];
then
    echo ""
    echo "Please specify connection information using --connection-string or --server and/or --database --user."
fi

if [ ! -z "$CONNSTR" ];
then
    mkdir -p ./output/DDL
    mssql-scripter --connection-string  --file-per-object -f ./output/DDL
fi

if [! -z "$SERVER" ];
then
    Write-Host "SERVER  : $SERVER"
    Write-Host "DATABASE: $DATABASE"
    Write-Host "USER    : $DATABASE"
    mkdir -p ./output/DDL
    mssql-scripter -S $SERVER -U $USER -P $PASSWORD --file-per-object -f ./output/DDL
    
fi
